{"version":3,"sources":["components/Section/Statistics/Statistics.module.css","components/Section/Section.jsx","components/Section/FeedbackOptions/FeedbackOptions.jsx","components/Section/Statistics/Statistics.jsx","components/Notification/Notification.jsx","components/App/App.js","index.js","components/Section/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css"],"names":["module","exports","Section","title","children","className","styles","container","FeedbackOptions","options","onLeaveFeedback","Object","keys","map","option","btn","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","list","item","Notification","message","App","state","hahdelClick","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","ceil","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,KAAO,2B,oKCcVC,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,sBAAKC,UAAWC,IAAOC,UAAvB,UACE,oBAAIF,UAAWC,IAAOH,MAAtB,SAA8BA,IAC7BC,M,gBCoBUI,EAvBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,qCACE,qBAAKL,UAAWC,IAAOC,UAAvB,SACGI,OAAOC,KAAKH,GAASI,KAAI,SAAAC,GAAM,OAC9B,wBAEET,UAAWC,IAAOS,IAClBC,KAAK,SACLC,QAAS,kBAAMP,EAAgBI,IAJjC,SAMGA,GALIA,QASX,oBAAIT,UAAWC,IAAOH,MAAtB,2B,gBCcWe,EA5BI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,qBAAIlB,UAAWC,IAAOkB,KAAtB,UACE,qBAAInB,UAAWC,IAAOmB,KAAtB,mBACQ,+BAAON,OAEf,qBAAId,UAAWC,IAAOmB,KAAtB,sBACW,+BAAOL,OAElB,qBAAIf,UAAWC,IAAOmB,KAAtB,kBACO,+BAAOJ,OAEd,qBAAIhB,UAAWC,IAAOmB,KAAtB,oBACS,+BAAOH,SAEhB,qBAAIjB,UAAWC,IAAOmB,KAAtB,gCACqB,iCAAOF,IAAP,cCVVG,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,KCIpCC,E,4MACJC,MAAQ,CACNV,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPS,YAAc,SAAAhB,GACZ,EAAKiB,UAAS,SAAAC,GACZ,OAAO,eAAGlB,EAASkB,EAAUlB,GAAU,O,EAI3CmB,mBAAqB,WAEnB,OADY,EAAKJ,MAAMV,KAAO,EAAKU,MAAMT,QAAU,EAAKS,MAAMR,K,EAIhEa,gCAAkC,WAIhC,OAH2BC,KAAKC,KAC7B,EAAKP,MAAMV,KAAO,EAAKc,qBAAwB,M,4CAKpD,WACE,OACE,eAAC,EAAD,CAAS9B,MAAM,wBAAf,UACE,cAAC,EAAD,CACEM,QAAS4B,KAAKR,MACdnB,gBAAiB2B,KAAKP,cAEvBO,KAAKJ,qBACJ,cAAC,EAAD,CACEd,KAAMkB,KAAKR,MAAMV,KACjBC,QAASiB,KAAKR,MAAMT,QACpBC,IAAKgB,KAAKR,MAAMR,IAChBC,MAAOe,KAAKJ,mBACZV,mBAAoBc,KAAKH,kCAG3B,cAAC,EAAD,CAAcP,QAAQ,gC,GAzCdW,aAgDHV,ICjDfW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1B3C,EAAOC,QAAU,CAAC,UAAY,mCAAmC,IAAM,6BAA6B,MAAQ,iC,kBCA5GD,EAAOC,QAAU,CAAC,UAAY,8B","file":"static/js/main.d97ba08d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__1em-l\"};","import styles from './Section.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <div className={styles.container}>\r\n    <h1 className={styles.title}>{title}</h1>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;\r\n","import styles from './FeedbackOptions.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\r\n  <>\r\n    <div className={styles.container}>\r\n      {Object.keys(options).map(option => (\r\n        <button\r\n          key={option}\r\n          className={styles.btn}\r\n          type=\"button\"\r\n          onClick={() => onLeaveFeedback(option)}\r\n        >\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </div>\r\n    <h2 className={styles.title}>Statistic</h2>\r\n  </>\r\n);\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.object,\r\n  onLeaveFeedback: PropTypes.func,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import styles from './Statistics.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <ul className={styles.list}>\r\n    <li className={styles.item}>\r\n      Good: <span>{good}</span>\r\n    </li>\r\n    <li className={styles.item}>\r\n      Neutral: <span>{neutral}</span>\r\n    </li>\r\n    <li className={styles.item}>\r\n      Bad: <span>{bad}</span>\r\n    </li>\r\n    <li className={styles.item}>\r\n      Total: <span>{total()}</span>\r\n    </li>\r\n    <li className={styles.item}>\r\n      Positive feedback: <span>{positivePercentage()}%</span>\r\n    </li>\r\n  </ul>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.func,\r\n  positivePercentage: PropTypes.func,\r\n};\r\n\r\nexport default Statistics;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => <p>{message}</p>;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n\r\nexport default Notification;\r\n","import { Component } from 'react';\r\nimport Section from '../Section/Section.jsx';\r\nimport FeedbackOptions from '../Section/FeedbackOptions/FeedbackOptions.jsx';\r\nimport Statistics from '../Section/Statistics/Statistics.jsx';\r\nimport Notification from '../Notification/Notification.jsx';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  hahdelClick = option => {\r\n    this.setState(prevState => {\r\n      return { [option]: prevState[option] + 1 };\r\n    });\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    const sum = this.state.good + this.state.neutral + this.state.bad;\r\n    return sum;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    const positivePercentage = Math.ceil(\r\n      (this.state.good / this.countTotalFeedback()) * 100,\r\n    );\r\n    return positivePercentage;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Section title=\"Please leave feedback\">\r\n        <FeedbackOptions\r\n          options={this.state}\r\n          onLeaveFeedback={this.hahdelClick}\r\n        />\r\n        {this.countTotalFeedback() ? (\r\n          <Statistics\r\n            good={this.state.good}\r\n            neutral={this.state.neutral}\r\n            bad={this.state.bad}\r\n            total={this.countTotalFeedback}\r\n            positivePercentage={this.countPositiveFeedbackPercentage}\r\n          />\r\n        ) : (\r\n          <Notification message=\"There is no feedback\"></Notification>\r\n        )}\r\n      </Section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FeedbackOptions_container__i7Prq\",\"btn\":\"FeedbackOptions_btn__2kKXc\",\"title\":\"FeedbackOptions_title___Ohiq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__3IrEC\"};"],"sourceRoot":""}